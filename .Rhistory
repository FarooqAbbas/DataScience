#****inferential Statistics********
library(gapminder0)
#****inferential Statistics********
library(gapminder)
data("gapminder")
view(gapminder)
View(gapminder)
library(dplyr)
View(gapminder)
df1<-gapminder %>%
select(country,lifeExp)
filter(country=="South Africa" | country=="Pakistan")
t.test(data=df1,lifeExp~country)
View(gapminder)
df1<-gapminder %>%
select(country,lifeExp)
filter(country=="South Africa" | country=="Pakistan")
t.test(data=df1,lifeExp~country)
df1<-gapminder %>%
select(country,lifeExp) %>%
filter(country=="South Africa" | country=="Pakistan")
t.test(data=df1,lifeExp~country)
df1<-gapminder %>%
select(country,lifeExp) %>%
filter(country=="Germany" | country=="Pakistan")
t.test(data=df1,lifeExp~country)
#*************************************************
library(ggplot2)
View(ggplot2)
#*************************************************
library(ggplot2)
View(ggplot2)
View(ggplot())
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap),y=lifeExp))+
geom_point()
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap),y=lifeExp col=continent,size=pop)+
geom_point()
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap),y=lifeExp, col=continent,size=pop))+
geom_point()
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap),y=lifeExp, col=continent,size=pop))+
geom_point(alpha=0.6)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap),y=lifeExp, col=continent,size=pop))+
geom_point(alpha=0.3)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap),y=lifeExp, col=continent,size=pop))+
geom_point(alpha=0.3)
geom_smooth()
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap),y=lifeExp, col=continent,size=pop))+
geom_point(alpha=0.3)
geom_smooth()
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap),y=lifeExp, col=continent,size=pop))+
geom_point(alpha=0.3)
geom_smooth(method = lm)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap),y=lifeExp, col=continent,size=pop))+
geom_point(alpha=0.3)+
geom_smooth(method = lm)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap),y=lifeExp, col=continent,size=pop))+
geom_point(alpha=0.3)+
geom_smooth(method = lm)+
facet_wrap(~continent)
gapminder %>%
filter(gdpPercap < 50000) %>%
ggplot(aes(x=log(gdpPercap),y=lifeExp, col=year,size=pop))+
geom_point(alpha=0.3)+
geom_smooth(method = lm)+
facet_wrap(~continent)
install.packages("arules")
library(arules)
dataGrocery<- read.transactions("C:/Users/faroo/Downloads/groceries.csv",sep=",")
dataGrocery
summary(dataGrocery)
inspect(dataGrocery)
inspect(dataGrocery[1:3])
inspect(dataGrocery[1001:1003])
itemFrequency(datagr[,1])
itemFrequency(dataGrocery[,1])
itemFrequency(dataGrocery[,1:6])
itemFrequencyPlot(dataGrocery,support=0.08)
itemFrequencyPlot(dataGrocery,topN=5)
model1 <- apriori(dataGrocery)
summary(mode1)
summary(model1)
model2 <- apriori(datagr,parameter = list(support=0.01,confidence=0.5))
model2 <- apriori(dataGrocery,parameter = list(support=0.01,confidence=0.5))
model2 <- apriori(dataGrocery,parameter = list(support=0.01,confidence=0.5))
summary(model2)
inspect(model2)
summary(dataGrocer
inspect(model[1:3])
inspect(model2[1:3])
#sorting the rule by lift
inspect(sort(model2,by="lift")[1:5])
model3 <- apriori(dataGrocery,parameter = list(support=0.01,confidence=0.02),appearance = list(default="rhs",lhs=c("whole milk","yogurt")))
summary(model3)
inspect(model3)
inspect(model3)
#rule for specific item
model3 <- apriori(dataGrocery,parameter = list(support=0.01,confidence=0.02),appearance = list(default="rhs",lhs=c("whole milk","yogurt")))
inspect(model3)
#rule for specific item
model3 <- apriori(dataGrocery,parameter = list(support=0.01,confidence=0.2),appearance = list(default="rhs",lhs=c("whole milk","yogurt")))
summary(model3)
inspect(model3)
install.packages("arulesViz")
library(arulesViz)
plot(model3)
rm(list = ls(all = TRUE))
titanic_train<-read.csv(file.choose())
class(titanic_train)
str(titanic_train)
install.packages("reader")
library(reader)
titanic<-reader_csv("train.csv")
titanic<-read_csv("train.csv")
titanic<-read_csv("train.csv")
library(readr)
titanic<-read_csv("train.csv")
titanic<-read_csv("train.csv")
rm(list = ls(all = TRUE))
titanic_train<-read.csv(file.choose())
str(titanic_train)
titanic
install.packages("reader")
titanic<-read_csv("train.csv")
titanic
install.packages("reader")
library(readr)
titanic<-read_csv("train.csv")
titanic
m<-matrix(c(1,2,3,4),2,2)
apply(m,1,sum)
m
apply(m,2,sum)
apply(m,3,sum)
apply(m,2,sum)
apply(m,1,mean)
apply(m,2,mean)
nyc<- list(pop<- 345670,
boroughs<-c("Manhattan","Bronx","Brooklyn","Queens","Staten Island"),
capital<-FALSE)
for(info in nyc){
print(class(info))
}
print((info))
for(info in nyc){
print((info))
}
lapply(nyc,class)
nyc
print(nyc)
str(nyc)
summary(nyc)
lapply(nyc,class)
unlist(lapply(nyc,class))
lapply(nyc,class)
unlist(lapply(nyc,class))
data<- list(x=1:5,y=6:10,z=11:15)
data
lapply(data,FUN = median)
sapply(data,FUN=median)
vapply(data,sum, FUN.VALUE = double(2))
vapply(data,sum, FUN.VALUE = double(1))
vapply(data,sum, FUN.VALUE = double(2))
vapply(data,range, FUN.VALUE = double(1))
vapply(data,range, FUN.VALUE = double(2))
vapply(data,sum, FUN.VALUE = double(1))
vapply(data,range, FUN.VALUE = double(2))
age<- c(54,45,65,34,33,43,32)
gender<-('m','f','f','m','f','m','f')
gender<-c('m','f','f','m','f','m','f')
tapply(age,gender,mean)
age<- c(40,45,65,34,33,43,32)
gender<-c('m','f','f','m','f','m','f')
tapply(age,gender,mean)
age<- c(40,45,45,34,33,43,32)
gender<-c('m','f','f','m','f','m','f')
tapply(age,gender,mean)
age<- c(30,35,35,34,33,43,32)
gender<-c('m','f','f','m','f','m','f')
tapply(age,gender,mean)
f<-factor(gender)
tapply(age,gender,mean)
tapply(age,f,mean)
tapply(age,gender,mean)
###################################
mapply(rep,c(1,3,5,7) ,c(1,3,5,7))
###################################
mapply(rep,c(2,4,5,7) ,c(1,3,5,7))
###################################
mapply(rep,c(2,4,5,7) ,c(8,3,5,7))
###################################
install.packages("dplyr")
library(hflights)
install.packages("hflights")
library(dplyr)
library(hflights)
head(hflights)
summary(hflights)
str(hflights)
hflights<-tbl_df(hflights)
class(hflights)
class(hflights)
hflights<-tbl_df(hflights)
class(hflights)
library(hflights)
library(hflights)
head(hflights)
rm(list = ls(all = TRUE))
library(dplyr)
library(hflights)
head(hflights)
summary(hflights)
str(hflights)
class(hflights)
hflights<-tbl_df(hflights)
class(hflights)
class(hflights)
str(hflights)
summary(hflights)
head(hflights)
str(hflights)
class(hflights)
hflights<-tbl_df(hflights)
class(hflights)
tbl<- select(hflights,ActualElapsedTime,AirTime,ArrDelay,DepDelay)
glimpse(tbl)
str(tbl)
hflights[,AirTime]
hflights$ActualElapsedTime
hflights[,"AirTime"]
select(hflights,end_with("Num"))
select(hflights,ends_with("Num"))
select(hflights,starts_with("Cancel"))
select(hflights, starts_with("Cancel"))
select(hflights, UniqueCarrier,ends_with("Num"),starts_with("Cancel"))
g2<-mutate(hflights,loss=ArrDelay-DepDelay)
g2
g1<-mutate(hflights,ActualGroundTime=ActualElapsedTime-AirTime)
#############################
long_flight<- filter(hflights,Distance>=3000)
view(long_flight)
view(long_flight)
View(long_flight)
(long_flight)
View(long_flight)
glimpse(long_flight)
All_Day_Journey<-filter(hflights,DepTime<500,ArrTime>2200)
All_Day_Journey<-filter(hflights,DepDelay>500,ArrDelay<00)
All_Day_Journey
All_Day_Journey<-filter(hflights,DepDelay>00,ArrDelay<00)
All_Day_Journey
cancelled_Delay<-filter(hflights,Cancelled==1,DepDelay>0)
cancelled_Delay
View(cancelled_Delay)
